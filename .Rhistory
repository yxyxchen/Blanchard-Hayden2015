forageData %>% filter(valid) %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay)) %>%
ggplot(aes(factor(foragingTime), mu)) +
geom_bar(stat = "identity") + facet_grid(~sub) + myTheme
forageData %>% filter(valid)
library("tidyverse")
source("subFxs/loadFxs.R")
source("subFxs/plotThemes.R")
source("subFxs/helpFxs.R")
dir.create("figures")
dir.create("figures/forageAnalysis")
# load data
allData = loadAll()
hdrData = allData$hdrData
trialData = allData$trialData
hdrData$nTrial =  sapply(trialData,nrow)
# prepare data
subs = unique(hdrData$sub)
nSub = length(subs)
tempt = do.call(rbind, trialData[hdrData$task == "forage"])
tempt$sub = rep(hdrData$sub[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$sess = rep(as.numeric(hdrData$sess[hdrData$task == "forage"]),
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$id = rep(hdrData$id[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$lastTrial = c(ifelse(tail(tempt$trial, -1) == 1, T, F), T)
constants = tempt[1,c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17))]
tempt = tempt %>% select(-c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17)))
# clean
truncateIdxs = tempt %>% group_by(id) %>% summarise(max(which(choiceMade == "leave"))) +
cumsum(c(0, head(sapply(trialData[hdrData$task == "forage"], nrow), -1)))
endIdxs = cumsum(c(sapply(trialData[hdrData$task == "forage"], nrow)))
junk = list()
for(i in 1 : length(endIdxs)){
a = truncateIdxs[i,2]
b = endIdxs[i]
junk[[i]] = (a+1) : b
}
delete = unlist(junk)
tempt = tempt[!(1 : nrow(tempt) %in% delete), ]
# calculate stay lengths
group = c(0, head(cumsum(tempt$choiceMade == "leave"), -1))
tempt$group = group
valid = sapply(split(tempt$timeInErrorState, tempt$group), function(x) sum(x == 0) == length(x))
nStay = table(group)
length(nStay)
sum(valid)
group = c(0, head(cumsum(tempt$choiceMade == "leave"), -1))
tempt$group = group
valid = sapply(split(tempt$timeInErrorState, tempt$group), function(x) sum(x == 0) == length(x))
nStay = table(group)
nStay = nStay - 1 # since leave is counted as a stay as well
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
forageData$valid = valid
# plot stay lengths
forageData %>% filter(valid) %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
forageData %>% filter(valid) %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay)) %>%
ggplot(aes(factor(foragingTime), mu)) +
geom_bar(stat = "identity") + facet_grid(~sub) + myTheme
valid = sapply(split(tempt$timeInErrorState, tempt$group), function(x) sum(x == 3) == length(x))
nStay = table(group)
nStay = nStay - 1 # since leave is counted as a stay as well
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
forageData$valid = valid
# plot stay lengths
forageData %>% filter(valid) %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
forageData %>% filter(valid) %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay)) %>%
ggplot(aes(factor(foragingTime), mu)) +
geom_bar(stat = "identity") + facet_grid(~sub) + myTheme
valid = sapply(split(tempt$timeInErrorState, tempt$group), function(x) sum(x == 0) == length(x))
nStay = table(group)
nStay = nStay - 1 # since leave is counted as a stay as well
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
forageData$valid = valid
# plot stay lengths
forageData %>% filter(valid) %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
forageData %>% filter(valid) %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay)) %>%
ggplot(aes(factor(foragingTime), mu)) +
geom_bar(stat = "identity") + facet_grid(~sub) + myTheme
forageData %>% filter(valid) %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay))
valid = sapply(split(tempt$trialErrors, tempt$group), function(x) sum(x == "none") == length(x))
nStay = table(group)
nStay = nStay - 1 # since leave is counted as a stay as well
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
forageData$valid = valid
# plot stay lengths
forageData %>% filter(valid) %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
forageData %>% filter(valid) %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay)) %>%
ggplot(aes(factor(foragingTime), mu)) +
geom_bar(stat = "identity") + facet_grid(~sub) + myTheme
sum(valid) / length(nStay)
group = c(0, head(cumsum(tempt$choiceMade == "leave"), -1))
tempt$group = group
nStay = table(group)
nStay = nStay - 1 # since leave is counted as a stay as well
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
a = tempt[tempt$group == 1,]
View(a)
library("tidyverse")
source("subFxs/loadFxs.R")
source("subFxs/plotThemes.R")
source("subFxs/helpFxs.R")
dir.create("figures")
dir.create("figures/forageAnalysis")
# load data
allData = loadAll()
hdrData = allData$hdrData
trialData = allData$trialData
hdrData$nTrial =  sapply(trialData,nrow)
# prepare data
subs = unique(hdrData$sub)
nSub = length(subs)
tempt = do.call(rbind, trialData[hdrData$task == "forage"])
tempt$sub = rep(hdrData$sub[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$sess = rep(as.numeric(hdrData$sess[hdrData$task == "forage"]),
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$id = rep(hdrData$id[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$lastTrial = c(ifelse(tail(tempt$trial, -1) == 1, T, F), T)
constants = tempt[1,c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17))]
tempt = tempt %>% select(-c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17)))
# clean
truncateIdxs = tempt %>% group_by(id) %>% summarise(max(which(choiceMade == "leave"))) +
cumsum(c(0, head(sapply(trialData[hdrData$task == "forage"], nrow), -1)))
endIdxs = cumsum(c(sapply(trialData[hdrData$task == "forage"], nrow)))
junk = list()
for(i in 1 : length(endIdxs)){
a = truncateIdxs[i,2]
b = endIdxs[i]
junk[[i]] = (a+1) : b
}
delete = unlist(junk)
tempt = tempt[!(1 : nrow(tempt) %in% delete), ]
# calculate stay lengths
group = c(0, head(cumsum(tempt$choiceMade == "leave"), -1))
tempt$group = group
nStay = table(group)
nStay = nStay - 1 # since leave is counted as a stay as well
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
# plot stay lengths
forageData %>% filter(valid) %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
View(constants)
0.2 - 0.187
0.2 / 0.013
range(nStay)
group[which(nStay >= 20 )]
a = tempt[tempt$group %in% group[which(nStay >= 20 )],]
View(a)
group
sum(group == "65")
group = c(0, head(cumsum(tempt$choiceMade == "leave"), -1))
tempt$group = group
nStay = table(group)
nStay
uniGroup = unique(group)
group = c(0, head(cumsum(tempt$choiceMade == "leave"), -1))
tempt$group = group
nStay = table(group)
uniGroup = unique(group)
nStay = nStay - 1 # since leave is counted as a stay as well
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
a = tempt[tempt$group %in% uniGroup[which(nStay >= 20 )],]
View(a)
library("tidyverse")
source("subFxs/loadFxs.R")
source("subFxs/plotThemes.R")
source("subFxs/helpFxs.R")
dir.create("figures")
dir.create("figures/forageAnalysis")
# load data
allData = loadAll()
hdrData = allData$hdrData
trialData = allData$trialData
hdrData$nTrial =  sapply(trialData,nrow)
# prepare data
subs = unique(hdrData$sub)
nSub = length(subs)
tempt = do.call(rbind, trialData[hdrData$task == "forage"])
tempt$sub = rep(hdrData$sub[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$sess = rep(as.numeric(hdrData$sess[hdrData$task == "forage"]),
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$id = rep(hdrData$id[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$lastTrial = c(ifelse(tail(tempt$trial, -1) == 1, T, F), T)
constants = tempt[1,c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17))]
tempt = tempt %>% select(-c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17)))
# clean
truncateIdxs = tempt %>% group_by(id) %>% summarise(max(which(choiceMade == "leave"))) +
cumsum(c(0, head(sapply(trialData[hdrData$task == "forage"], nrow), -1)))
endIdxs = cumsum(c(sapply(trialData[hdrData$task == "forage"], nrow)))
junk = list()
for(i in 1 : length(endIdxs)){
a = truncateIdxs[i,2]
b = endIdxs[i]
junk[[i]] = (a+1) : b
}
delete = unlist(junk)
tempt = tempt[!(1 : nrow(tempt) %in% delete), ]
# calculate stay lengths
group = c(0, head(cumsum(tempt$choiceMade == "leave"), -1))
tempt$group = group
nStay = table(group)
uniGroup = unique(group)
nStay = nStay - 1 # since leave is counted as a stay as well
nStay = pmin(nStay, 17)
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
forageData %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay)) %>%
ggplot(aes(factor(foragingTime), mu)) +
geom_bar(stat = "identity") + facet_grid(~sub) + myTheme
pmin(nStay, 17)
a = tempt[tempt$group %in% uniGroup[which(nStay >= 20 )],]
View(tempt)
View(a)
library("tidyverse")
source("subFxs/loadFxs.R")
source("subFxs/plotThemes.R")
source("subFxs/helpFxs.R")
dir.create("figures")
dir.create("figures/forageAnalysis")
# load data
allData = loadAll()
hdrData = allData$hdrData
trialData = allData$trialData
hdrData$nTrial =  sapply(trialData,nrow)
# prepare data
subs = unique(hdrData$sub)
nSub = length(subs)
tempt = do.call(rbind, trialData[hdrData$task == "forage"])
tempt$sub = rep(hdrData$sub[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$sess = rep(as.numeric(hdrData$sess[hdrData$task == "forage"]),
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$id = rep(hdrData$id[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$lastTrial = c(ifelse(tail(tempt$trial, -1) == 1, T, F), T)
constants = tempt[1,c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17))]
tempt = tempt %>% select(-c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17)))
# clean
truncateIdxs = tempt %>% group_by(id) %>% summarise(max(which(choiceMade == "leave"))) +
cumsum(c(0, head(sapply(trialData[hdrData$task == "forage"], nrow), -1)))
endIdxs = cumsum(c(sapply(trialData[hdrData$task == "forage"], nrow)))
junk = list()
for(i in 1 : length(endIdxs)){
a = truncateIdxs[i,2]
b = endIdxs[i]
junk[[i]] = (a+1) : b
}
delete = unlist(junk)
tempt = tempt[!(1 : nrow(tempt) %in% delete), ]
# calculate stay lengths
group = c(0, head(cumsum(tempt$choiceMade == "leave"), -1))
tempt$group = group
nStay = table(group)
uniGroup = unique(group)
nStay = nStay - 1 # since leave is counted as a stay as well
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
a = tempt[tempt$group %in% uniGroup[which(nStay >= 20 )],]
View(a)
library("tidyverse")
source("subFxs/loadFxs.R")
source("subFxs/plotThemes.R")
source("subFxs/helpFxs.R")
dir.create("figures")
dir.create("figures/forageAnalysis")
# load data
allData = loadAll()
hdrData = allData$hdrData
trialData = allData$trialData
hdrData$nTrial =  sapply(trialData,nrow)
# prepare data
subs = unique(hdrData$sub)
nSub = length(subs)
tempt = do.call(rbind, trialData[hdrData$task == "forage"])
tempt$sub = rep(hdrData$sub[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$sess = rep(as.numeric(hdrData$sess[hdrData$task == "forage"]),
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$id = rep(hdrData$id[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$lastTrial = c(ifelse(tail(tempt$trial, -1) == 1, T, F), T)
constants = tempt[1,c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17))]
tempt = tempt %>% select(-c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17)))
# clean
truncateIdxs = tempt %>% group_by(id) %>% summarise(max(which(choiceMade == "leave"))) +
cumsum(c(0, head(sapply(trialData[hdrData$task == "forage"], nrow), -1)))
endIdxs = cumsum(c(sapply(trialData[hdrData$task == "forage"], nrow)))
junk = list()
for(i in 1 : length(endIdxs)){
a = truncateIdxs[i,2]
b = endIdxs[i]
junk[[i]] = (a+1) : b
}
delete = unlist(junk)
tempt = tempt[!(1 : nrow(tempt) %in% delete), ]
# calculate stay lengths
group = c(0, head(cumsum(tempt$choiceMade == "leave"), -1))
tempt$group = group
nStay = table(group)
uniGroup = unique(group)
nStay = nStay - 1 # since leave is counted as a stay as well
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
forageData %>% filter(forageData$nStay <= 17) %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay)) %>%
ggplot(aes(factor(foragingTime), mu)) +
geom_bar(stat = "identity") + facet_grid(~sub) + myTheme
View(hdrData)
forageData %>% filter(forageData$id == "1") %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay)) %>%
ggplot(aes(factor(foragingTime), mu)) +
geom_bar(stat = "identity") + facet_grid(~sub) + myTheme
forageData %>% filter(forageData$id == "1") %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay))
forageData %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay))
forageData %>% filter(forageData$id == "2") %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay))
forageData %>% filter(forageData$id == "2") %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay))
forageData$id
forageData %>% filter(forageData$id == "3") %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay))
forageData %>% filter(forageData$id == "4") %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay))
# plot stay lengths
forageData %>% filter(forageData$id == "3")  %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
# plot stay lengths
forageData %>% filter(forageData$id == "1")  %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
# plot stay lengths
forageData %>% filter(forageData$id == "2")  %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
# plot stay lengths
forageData %>% filter(forageData$id == "5")  %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
# plot stay lengths
forageData %>% filter(forageData$id == "1")  %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
# plot stay lengths
forageData %>% filter(forageData$id == "10")  %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
# plot stay lengths
forageData %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
library("tidyverse")
source("subFxs/loadFxs.R")
source("subFxs/plotThemes.R")
source("subFxs/helpFxs.R")
dir.create("figures")
dir.create("figures/forageAnalysis")
# load data
allData = loadAll()
hdrData = allData$hdrData
trialData = allData$trialData
hdrData$nTrial =  sapply(trialData,nrow)
# prepare data
subs = unique(hdrData$sub)
nSub = length(subs)
tempt = do.call(rbind, trialData[hdrData$task == "forage"])
tempt$sub = rep(hdrData$sub[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$sess = rep(as.numeric(hdrData$sess[hdrData$task == "forage"]),
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$id = rep(hdrData$id[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$lastTrial = c(ifelse(tail(tempt$trial, -1) == 1, T, F), T)
constants = tempt[1,c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17))]
tempt = tempt %>% select(-c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17)))
# clean
truncateIdxs = tempt %>% group_by(id) %>% summarise(max(which(choiceMade == "leave"))) +
cumsum(c(0, head(sapply(trialData[hdrData$task == "forage"], nrow), -1)))
endIdxs = cumsum(c(sapply(trialData[hdrData$task == "forage"], nrow)))
junk = list()
for(i in 1 : length(endIdxs)){
a = truncateIdxs[i,2]
b = endIdxs[i]
junk[[i]] = (a+1) : b
}
delete = unlist(junk)
tempt = tempt[!(1 : nrow(tempt) %in% delete), ]
# calculate stay lengths
group = c(0, head(cumsum(tempt$choiceMade == "leave"), -1))
tempt$group = group
nStay = table(group)
uniGroup = unique(group)
nStay = nStay - 1 # since leave is counted as a stay as well
nStay = pmin(nStay, 17)
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
library("tidyverse")
source("subFxs/loadFxs.R")
source("subFxs/plotThemes.R")
source("subFxs/helpFxs.R")
dir.create("figures")
dir.create("figures/forageAnalysis")
# load data
allData = loadAll()
hdrData = allData$hdrData
trialData = allData$trialData
hdrData$nTrial =  sapply(trialData,nrow)
# prepare data
subs = unique(hdrData$sub)
nSub = length(subs)
tempt = do.call(rbind, trialData[hdrData$task == "forage"])
tempt$sub = rep(hdrData$sub[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$sess = rep(as.numeric(hdrData$sess[hdrData$task == "forage"]),
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$id = rep(hdrData$id[hdrData$task == "forage"],
sapply(trialData[hdrData$task == "forage"],nrow))
tempt$lastTrial = c(ifelse(tail(tempt$trial, -1) == 1, T, F), T)
constants = tempt[1,c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17))]
tempt = tempt %>% select(-c("timeToFixate", "minFixTimeToStart", "holdFixTime",
"timeToChoose", "ITI", "shrinkRate", "handlingTime",
paste0("allJuiceAmounts_", 1:17)))
# clean
truncateIdxs = tempt %>% group_by(id) %>% summarise(max(which(choiceMade == "leave"))) +
cumsum(c(0, head(sapply(trialData[hdrData$task == "forage"], nrow), -1)))
endIdxs = cumsum(c(sapply(trialData[hdrData$task == "forage"], nrow)))
junk = list()
for(i in 1 : length(endIdxs)){
a = truncateIdxs[i,2]
b = endIdxs[i]
junk[[i]] = (a+1) : b
}
delete = unlist(junk)
tempt = tempt[!(1 : nrow(tempt) %in% delete), ]
# calculate stay lengths
group = c(0, head(cumsum(tempt$choiceMade == "leave"), -1))
tempt$group = group
nStay = table(group)
uniGroup = unique(group)
nStay = nStay - 1 # since leave is counted as a stay as well
nStay = pmin(nStay, 17)
forageData = tempt[which(tempt$choiceMade == "leave")-1,]
forageData$nStay = nStay
# plot stay lengths
forageData %>% group_by(sub, foragingTime) %>%
ggplot(aes(nStay)) +
geom_histogram() + facet_grid(foragingTime~sub) + myTheme
forageData %>% filter(forageData$id == "4") %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay)) %>%
ggplot(aes(factor(foragingTime), mu)) +
geom_bar(stat = "identity") + facet_grid(~sub) + myTheme
forageData %>% group_by(sub, foragingTime) %>%
dplyr::summarise(mu = mean(nStay)) %>%
ggplot(aes(factor(foragingTime), mu)) +
geom_bar(stat = "identity") + facet_grid(~sub) + myTheme
View(tempt)
constants
